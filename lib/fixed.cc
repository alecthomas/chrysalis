#include <iostream.h>
#include <stdio.h>
#include "fixed8.h"
#include "fixed.h"

int fixed8::costable[] = {
  256, 255, 255, 255, 255, 255, 255, 255, 
  254, 254, 254, 253, 253, 252, 252, 251, 
  251, 250, 249, 249, 248, 247, 246, 245, 
  244, 244, 243, 242, 241, 239, 238, 237, 
  236, 235, 234, 232, 231, 230, 228, 227, 
  225, 224, 222, 221, 219, 217, 216, 214, 
  212, 211, 209, 207, 205, 203, 201, 199, 
  197, 195, 193, 191, 189, 187, 185, 183, 
  181, 178, 176, 174, 171, 169, 167, 164, 
  162, 159, 157, 155, 152, 149, 147, 144, 
  142, 139, 136, 134, 131, 128, 126, 123, 
  120, 117, 115, 112, 109, 106, 103, 100, 
  97, 95, 92, 89, 86, 83, 80, 77, 
  74, 71, 68, 65, 62, 59, 56, 53, 
  49, 46, 43, 40, 37, 34, 31, 28, 
  25, 21, 18, 15, 12, 9, 6, 3, 
  0, -3, -6, -9, -12, -15, -18, -21, 
  -25, -28, -31, -34, -37, -40, -43, -46, 
  -49, -53, -56, -59, -62, -65, -68, -71, 
  -74, -77, -80, -83, -86, -89, -92, -95, 
  -97, -100, -103, -106, -109, -112, -115, -117, 
  -120, -123, -126, -128, -131, -134, -136, -139, 
  -142, -144, -147, -149, -152, -155, -157, -159, 
  -162, -164, -167, -169, -171, -174, -176, -178, 
  -181, -183, -185, -187, -189, -191, -193, -195, 
  -197, -199, -201, -203, -205, -207, -209, -211, 
  -212, -214, -216, -217, -219, -221, -222, -224, 
  -225, -227, -228, -230, -231, -232, -234, -235, 
  -236, -237, -238, -239, -241, -242, -243, -244, 
  -244, -245, -246, -247, -248, -249, -249, -250, 
  -251, -251, -252, -252, -253, -253, -254, -254, 
  -254, -255, -255, -255, -255, -255, -255, -255, 
  -256, -255, -255, -255, -255, -255, -255, -255, 
  -254, -254, -254, -253, -253, -252, -252, -251, 
  -251, -250, -249, -249, -248, -247, -246, -245, 
  -244, -244, -243, -242, -241, -239, -238, -237, 
  -236, -235, -234, -232, -231, -230, -228, -227, 
  -225, -224, -222, -221, -219, -217, -216, -214, 
  -212, -211, -209, -207, -205, -203, -201, -199, 
  -197, -195, -193, -191, -189, -187, -185, -183, 
  -181, -178, -176, -174, -171, -169, -167, -164, 
  -162, -159, -157, -155, -152, -149, -147, -144, 
  -142, -139, -136, -134, -131, -128, -126, -123, 
  -120, -117, -115, -112, -109, -106, -103, -100, 
  -97, -95, -92, -89, -86, -83, -80, -77, 
  -74, -71, -68, -65, -62, -59, -56, -53, 
  -49, -46, -43, -40, -37, -34, -31, -28, 
  -25, -21, -18, -15, -12, -9, -6, -3, 
  0, 3, 6, 9, 12, 15, 18, 21, 
  25, 28, 31, 34, 37, 40, 43, 46, 
  49, 53, 56, 59, 62, 65, 68, 71, 
  74, 77, 80, 83, 86, 89, 92, 95, 
  97, 100, 103, 106, 109, 112, 115, 117, 
  120, 123, 126, 128, 131, 134, 136, 139, 
  142, 144, 147, 149, 152, 155, 157, 159, 
  162, 164, 167, 169, 171, 174, 176, 178, 
  181, 183, 185, 187, 189, 191, 193, 195, 
  197, 199, 201, 203, 205, 207, 209, 211, 
  212, 214, 216, 217, 219, 221, 222, 224, 
  225, 227, 228, 230, 231, 232, 234, 235, 
  236, 237, 238, 239, 241, 242, 243, 244, 
  244, 245, 246, 247, 248, 249, 249, 250, 
  251, 251, 252, 252, 253, 253, 254, 254, 
  254, 255, 255, 255, 255, 255, 255, 255 };

int fixed8::sintable[] = {
  0, 3, 6, 9, 12, 15, 18, 21, 
  25, 28, 31, 34, 37, 40, 43, 46, 
  49, 53, 56, 59, 62, 65, 68, 71, 
  74, 77, 80, 83, 86, 89, 92, 95, 
  97, 100, 103, 106, 109, 112, 115, 117, 
  120, 123, 126, 128, 131, 134, 136, 139, 
  142, 144, 147, 149, 152, 155, 157, 159, 
  162, 164, 167, 169, 171, 174, 176, 178, 
  181, 183, 185, 187, 189, 191, 193, 195, 
  197, 199, 201, 203, 205, 207, 209, 211, 
  212, 214, 216, 217, 219, 221, 222, 224, 
  225, 227, 228, 230, 231, 232, 234, 235, 
  236, 237, 238, 239, 241, 242, 243, 244, 
  244, 245, 246, 247, 248, 249, 249, 250, 
  251, 251, 252, 252, 253, 253, 254, 254, 
  254, 255, 255, 255, 255, 255, 255, 255, 
  256, 255, 255, 255, 255, 255, 255, 255, 
  254, 254, 254, 253, 253, 252, 252, 251, 
  251, 250, 249, 249, 248, 247, 246, 245, 
  244, 244, 243, 242, 241, 239, 238, 237, 
  236, 235, 234, 232, 231, 230, 228, 227, 
  225, 224, 222, 221, 219, 217, 216, 214, 
  212, 211, 209, 207, 205, 203, 201, 199, 
  197, 195, 193, 191, 189, 187, 185, 183, 
  181, 178, 176, 174, 171, 169, 167, 164, 
  162, 159, 157, 155, 152, 149, 147, 144, 
  142, 139, 136, 134, 131, 128, 126, 123, 
  120, 117, 115, 112, 109, 106, 103, 100, 
  97, 95, 92, 89, 86, 83, 80, 77, 
  74, 71, 68, 65, 62, 59, 56, 53, 
  49, 46, 43, 40, 37, 34, 31, 28, 
  25, 21, 18, 15, 12, 9, 6, 3, 
  0, -3, -6, -9, -12, -15, -18, -21, 
  -25, -28, -31, -34, -37, -40, -43, -46, 
  -49, -53, -56, -59, -62, -65, -68, -71, 
  -74, -77, -80, -83, -86, -89, -92, -95, 
  -97, -100, -103, -106, -109, -112, -115, -117, 
  -120, -123, -126, -128, -131, -134, -136, -139, 
  -142, -144, -147, -149, -152, -155, -157, -159, 
  -162, -164, -167, -169, -171, -174, -176, -178, 
  -181, -183, -185, -187, -189, -191, -193, -195, 
  -197, -199, -201, -203, -205, -207, -209, -211, 
  -212, -214, -216, -217, -219, -221, -222, -224, 
  -225, -227, -228, -230, -231, -232, -234, -235, 
  -236, -237, -238, -239, -241, -242, -243, -244, 
  -244, -245, -246, -247, -248, -249, -249, -250, 
  -251, -251, -252, -252, -253, -253, -254, -254, 
  -254, -255, -255, -255, -255, -255, -255, -255, 
  -256, -255, -255, -255, -255, -255, -255, -255, 
  -254, -254, -254, -253, -253, -252, -252, -251, 
  -251, -250, -249, -249, -248, -247, -246, -245, 
  -244, -244, -243, -242, -241, -239, -238, -237, 
  -236, -235, -234, -232, -231, -230, -228, -227, 
  -225, -224, -222, -221, -219, -217, -216, -214, 
  -212, -211, -209, -207, -205, -203, -201, -199, 
  -197, -195, -193, -191, -189, -187, -185, -183, 
  -181, -178, -176, -174, -171, -169, -167, -164, 
  -162, -159, -157, -155, -152, -149, -147, -144, 
  -142, -139, -136, -134, -131, -128, -126, -123, 
  -120, -117, -115, -112, -109, -106, -103, -100, 
  -97, -95, -92, -89, -86, -83, -80, -77, 
  -74, -71, -68, -65, -62, -59, -56, -53, 
  -49, -46, -43, -40, -37, -34, -31, -28, 
  -25, -21, -18, -15, -12, -9, -6, -3 };

int fixed::costable[] = {
  65536, 65531, 65516, 65491, 65457, 65412, 65358, 65294, 
  65220, 65136, 65043, 64939, 64826, 64703, 64571, 64428, 
  64276, 64115, 63943, 63762, 63571, 63371, 63162, 62942, 
  62714, 62475, 62228, 61971, 61705, 61429, 61144, 60850, 
  60547, 60235, 59913, 59583, 59243, 58895, 58538, 58172, 
  57797, 57414, 57022, 56621, 56212, 55794, 55368, 54933, 
  54491, 54040, 53581, 53114, 52639, 52155, 51665, 51166, 
  50660, 50146, 49624, 49095, 48558, 48015, 47464, 46906, 
  46340, 45768, 45189, 44603, 44011, 43412, 42806, 42194, 
  41575, 40950, 40319, 39682, 39039, 38390, 37736, 37075, 
  36409, 35738, 35061, 34379, 33692, 32999, 32302, 31600, 
  30893, 30181, 29465, 28745, 28020, 27291, 26557, 25820, 
  25079, 24334, 23586, 22833, 22078, 21319, 20557, 19792, 
  19024, 18253, 17479, 16702, 15923, 15142, 14359, 13573, 
  12785, 11995, 11204, 10410, 9616, 8819, 8022, 7223, 
  6423, 5622, 4821, 4018, 3215, 2412, 1608, 804, 
  0, -804, -1608, -2412, -3215, -4018, -4821, -5622, 
  -6423, -7223, -8022, -8819, -9616, -10410, -11204, -11995, 
  -12785, -13573, -14359, -15142, -15923, -16702, -17479, -18253, 
  -19024, -19792, -20557, -21319, -22078, -22833, -23586, -24334, 
  -25079, -25820, -26557, -27291, -28020, -28745, -29465, -30181, 
  -30893, -31600, -32302, -32999, -33692, -34379, -35061, -35738, 
  -36409, -37075, -37736, -38390, -39039, -39682, -40319, -40950, 
  -41575, -42194, -42806, -43412, -44011, -44603, -45189, -45768, 
  -46340, -46906, -47464, -48015, -48558, -49095, -49624, -50146, 
  -50660, -51166, -51665, -52155, -52639, -53114, -53581, -54040, 
  -54491, -54933, -55368, -55794, -56212, -56621, -57022, -57414, 
  -57797, -58172, -58538, -58895, -59243, -59583, -59913, -60235, 
  -60547, -60850, -61144, -61429, -61705, -61971, -62228, -62475, 
  -62714, -62942, -63162, -63371, -63571, -63762, -63943, -64115, 
  -64276, -64428, -64571, -64703, -64826, -64939, -65043, -65136, 
  -65220, -65294, -65358, -65412, -65457, -65491, -65516, -65531, 
  -65536, -65531, -65516, -65491, -65457, -65412, -65358, -65294, 
  -65220, -65136, -65043, -64939, -64826, -64703, -64571, -64428, 
  -64276, -64115, -63943, -63762, -63571, -63371, -63162, -62942, 
  -62714, -62475, -62228, -61971, -61705, -61429, -61144, -60850, 
  -60547, -60235, -59913, -59583, -59243, -58895, -58538, -58172, 
  -57797, -57414, -57022, -56621, -56212, -55794, -55368, -54933, 
  -54491, -54040, -53581, -53114, -52639, -52155, -51665, -51166, 
  -50660, -50146, -49624, -49095, -48558, -48015, -47464, -46906, 
  -46340, -45768, -45189, -44603, -44011, -43412, -42806, -42194, 
  -41575, -40950, -40319, -39682, -39039, -38390, -37736, -37075, 
  -36409, -35738, -35061, -34379, -33692, -32999, -32302, -31600, 
  -30893, -30181, -29465, -28745, -28020, -27291, -26557, -25820, 
  -25079, -24334, -23586, -22833, -22078, -21319, -20557, -19792, 
  -19024, -18253, -17479, -16702, -15923, -15142, -14359, -13573, 
  -12785, -11995, -11204, -10410, -9616, -8819, -8022, -7223, 
  -6423, -5622, -4821, -4018, -3215, -2412, -1608, -804, 
  0, 804, 1608, 2412, 3215, 4018, 4821, 5622, 
  6423, 7223, 8022, 8819, 9616, 10410, 11204, 11995, 
  12785, 13573, 14359, 15142, 15923, 16702, 17479, 18253, 
  19024, 19792, 20557, 21319, 22078, 22833, 23586, 24334, 
  25079, 25820, 26557, 27291, 28020, 28745, 29465, 30181, 
  30893, 31600, 32302, 32999, 33692, 34379, 35061, 35738, 
  36409, 37075, 37736, 38390, 39039, 39682, 40319, 40950, 
  41575, 42194, 42806, 43412, 44011, 44603, 45189, 45768, 
  46340, 46906, 47464, 48015, 48558, 49095, 49624, 50146, 
  50660, 51166, 51665, 52155, 52639, 53114, 53581, 54040, 
  54491, 54933, 55368, 55794, 56212, 56621, 57022, 57414, 
  57797, 58172, 58538, 58895, 59243, 59583, 59913, 60235, 
  60547, 60850, 61144, 61429, 61705, 61971, 62228, 62475, 
  62714, 62942, 63162, 63371, 63571, 63762, 63943, 64115, 
  64276, 64428, 64571, 64703, 64826, 64939, 65043, 65136, 
  65220, 65294, 65358, 65412, 65457, 65491, 65516, 65531 };

int fixed::sintable[] = {
  0, 804, 1608, 2412, 3215, 4018, 4821, 5622, 
  6423, 7223, 8022, 8819, 9616, 10410, 11204, 11995, 
  12785, 13573, 14359, 15142, 15923, 16702, 17479, 18253, 
  19024, 19792, 20557, 21319, 22078, 22833, 23586, 24334, 
  25079, 25820, 26557, 27291, 28020, 28745, 29465, 30181, 
  30893, 31600, 32302, 32999, 33692, 34379, 35061, 35738, 
  36409, 37075, 37736, 38390, 39039, 39682, 40319, 40950, 
  41575, 42194, 42806, 43412, 44011, 44603, 45189, 45768, 
  46340, 46906, 47464, 48015, 48558, 49095, 49624, 50146, 
  50660, 51166, 51665, 52155, 52639, 53114, 53581, 54040, 
  54491, 54933, 55368, 55794, 56212, 56621, 57022, 57414, 
  57797, 58172, 58538, 58895, 59243, 59583, 59913, 60235, 
  60547, 60850, 61144, 61429, 61705, 61971, 62228, 62475, 
  62714, 62942, 63162, 63371, 63571, 63762, 63943, 64115, 
  64276, 64428, 64571, 64703, 64826, 64939, 65043, 65136, 
  65220, 65294, 65358, 65412, 65457, 65491, 65516, 65531, 
  65536, 65531, 65516, 65491, 65457, 65412, 65358, 65294, 
  65220, 65136, 65043, 64939, 64826, 64703, 64571, 64428, 
  64276, 64115, 63943, 63762, 63571, 63371, 63162, 62942, 
  62714, 62475, 62228, 61971, 61705, 61429, 61144, 60850, 
  60547, 60235, 59913, 59583, 59243, 58895, 58538, 58172, 
  57797, 57414, 57022, 56621, 56212, 55794, 55368, 54933, 
  54491, 54040, 53581, 53114, 52639, 52155, 51665, 51166, 
  50660, 50146, 49624, 49095, 48558, 48015, 47464, 46906, 
  46340, 45768, 45189, 44603, 44011, 43412, 42806, 42194, 
  41575, 40950, 40319, 39682, 39039, 38390, 37736, 37075, 
  36409, 35738, 35061, 34379, 33692, 32999, 32302, 31600, 
  30893, 30181, 29465, 28745, 28020, 27291, 26557, 25820, 
  25079, 24334, 23586, 22833, 22078, 21319, 20557, 19792, 
  19024, 18253, 17479, 16702, 15923, 15142, 14359, 13573, 
  12785, 11995, 11204, 10410, 9616, 8819, 8022, 7223, 
  6423, 5622, 4821, 4018, 3215, 2412, 1608, 804, 
  0, -804, -1608, -2412, -3215, -4018, -4821, -5622, 
  -6423, -7223, -8022, -8819, -9616, -10410, -11204, -11995, 
  -12785, -13573, -14359, -15142, -15923, -16702, -17479, -18253, 
  -19024, -19792, -20557, -21319, -22078, -22833, -23586, -24334, 
  -25079, -25820, -26557, -27291, -28020, -28745, -29465, -30181, 
  -30893, -31600, -32302, -32999, -33692, -34379, -35061, -35738, 
  -36409, -37075, -37736, -38390, -39039, -39682, -40319, -40950, 
  -41575, -42194, -42806, -43412, -44011, -44603, -45189, -45768, 
  -46340, -46906, -47464, -48015, -48558, -49095, -49624, -50146, 
  -50660, -51166, -51665, -52155, -52639, -53114, -53581, -54040, 
  -54491, -54933, -55368, -55794, -56212, -56621, -57022, -57414, 
  -57797, -58172, -58538, -58895, -59243, -59583, -59913, -60235, 
  -60547, -60850, -61144, -61429, -61705, -61971, -62228, -62475, 
  -62714, -62942, -63162, -63371, -63571, -63762, -63943, -64115, 
  -64276, -64428, -64571, -64703, -64826, -64939, -65043, -65136, 
  -65220, -65294, -65358, -65412, -65457, -65491, -65516, -65531, 
  -65536, -65531, -65516, -65491, -65457, -65412, -65358, -65294, 
  -65220, -65136, -65043, -64939, -64826, -64703, -64571, -64428, 
  -64276, -64115, -63943, -63762, -63571, -63371, -63162, -62942, 
  -62714, -62475, -62228, -61971, -61705, -61429, -61144, -60850, 
  -60547, -60235, -59913, -59583, -59243, -58895, -58538, -58172, 
  -57797, -57414, -57022, -56621, -56212, -55794, -55368, -54933, 
  -54491, -54040, -53581, -53114, -52639, -52155, -51665, -51166, 
  -50660, -50146, -49624, -49095, -48558, -48015, -47464, -46906, 
  -46340, -45768, -45189, -44603, -44011, -43412, -42806, -42194, 
  -41575, -40950, -40319, -39682, -39039, -38390, -37736, -37075, 
  -36409, -35738, -35061, -34379, -33692, -32999, -32302, -31600, 
  -30893, -30181, -29465, -28745, -28020, -27291, -26557, -25820, 
  -25079, -24334, -23586, -22833, -22078, -21319, -20557, -19792, 
  -19024, -18253, -17479, -16702, -15923, -15142, -14359, -13573, 
  -12785, -11995, -11204, -10410, -9616, -8819, -8022, -7223, 
  -6423, -5622, -4821, -4018, -3215, -2412, -1608, -804 };

#define BITSPERLONG 32 
#define TOP2BITS(x) ((x & (3 << (BITSPERLONG-2))) >> (BITSPERLONG-2))

fixed sqrt(fixed value)
{
unsigned a = 0, r = 0, e = 0, x = value.number < 0 ? -value.number : value.number;
int i;

	for (i = 0; i < 16 + FIXED_SHIFT_SIZE; i++)
	{
		r = (r << 2) + TOP2BITS(x);
		x <<= 2;
		a <<= 1;
		e = (a << 1) + 1;
		if (r >= e)
		{
			r -= e;
			a++;
		}
	}
	return fixed(a >> (FIXED_SHIFT_SIZE >> 1), "");
}

int sqrt(int value)
{
unsigned a = 0, r = 0, e = 0, x = value < 0 ? -value : value;
int i;

	for (i = 0; i < 16; i++)
	{
		r = (r << 2) + TOP2BITS(x);
		x <<= 2;
		a <<= 1;
		e = (a << 1) + 1;
		if (r >= e)
		{
			r -= e;
			a++;
		}
	}
	return a;
}

ostream &operator << (ostream &outfile, fixed const &f)
/* =====================================================================
	Output fixed point to a stream
*/
{
	outfile << (double)f;
	return outfile;
}

istream &operator >> (istream &infile, fixed &f)
/* ====================================================================
	Input fixed point from a stream
*/
{
	return infile;
}

fixed8 sqrt(fixed8 value)
{
unsigned a = 0, r = 0, e = 0, x = value.number < 0 ? -value.number : value.number;
int i;

	for (i = 0; i < 16 + FIXED8_SHIFT_SIZE; i++)
	{
		r = (r << 2) + TOP2BITS(x);
		x <<= 2;
		a <<= 1;
		e = (a << 1) + 1;
		if (r >= e)
		{
			r -= e;
			a++;
		}
	}
	return fixed8(a >> (FIXED8_SHIFT_SIZE >> 1), "");
}

ostream &operator << (ostream &outfile, fixed8 const &f)
/* =====================================================================
	Output fixed point to a stream
*/
{
	outfile << (double)f;
	return outfile;
}

istream &operator >> (istream &infile, fixed8 &f)
/* ====================================================================
	Input fixed point from a stream
*/
{
	return infile;
}
